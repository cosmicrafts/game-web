{"version":3,"sources":["../src/index.js"],"names":["TestAnvilComponent","MyContext","React","createContext","useAnvilStore","useAnvilDispatch","useAnvilSelector","myStore","reducer","user","userReducer","nft","nftReducer","inventory","inventoryReducer","devTools","process","env","NODE_ENV","AnvilProvider","children","setTimeout","dispatch","window","addEventListener"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AAEA;;AAMA;;AAYA;;AAqDA;;AAEA;;;;;;;;AANO,MAAMA,kBAAkB,GAAG,MAAM;AACtC,sBAAO,4EAAP;AACD,CAFM;;;;AAaP,MAAMC,SAAS,gBAAGC,eAAMC,aAAN,CAAoB,IAApB,CAAlB,C,CAEA;;;AACO,MAAMC,aAAa,GAAG,iCAAgBH,SAAhB,CAAtB;;AACA,MAAMI,gBAAgB,GAAG,oCAAmBJ,SAAnB,CAAzB;;AACA,MAAMK,gBAAgB,GAAG,oCAAmBL,SAAnB,CAAzB;;AAEP,MAAMM,OAAO,GAAG,6BAAe;AAC7B;AACAC,EAAAA,OAAO,EAAE;AACPC,IAAAA,IAAI,EAAEC,aADC;AAEPC,IAAAA,GAAG,EAAEC,YAFE;AAGPC,IAAAA,SAAS,EAAEC;AAHJ,GAFoB;AAO7BC,EAAAA,QAAQ,EAAEC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB;AAPN,CAAf,CAAhB;;AAUO,SAASC,aAAT,OAAqC;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AAC1C,sBACE,6BAAC,oBAAD;AAAU,IAAA,OAAO,EAAEnB,SAAnB;AAA8B,IAAA,KAAK,EAAEM;AAArC,KACGa,QADH,CADF;AAKD,C,CAED;;;AAEAC,UAAU,CAAC,MAAM;AACfd,EAAAA,OAAO,CAACe,QAAR,CAAiB,sBAAjB;AACD,CAFS,EAEP,GAFO,CAAV;;AAIA,IAAI,OAAOC,MAAP,KAAkB,WAAtB,EAAmC;AACjCA,EAAAA,MAAM,CAACC,gBAAP,CAAwB,OAAxB,EAAiC,MAAMjB,OAAO,CAACe,QAAR,CAAiB,yBAAjB,CAAvC;AACAC,EAAAA,MAAM,CAACC,gBAAP,CAAwB,MAAxB,EAAgC,MAAMjB,OAAO,CAACe,QAAR,CAAiB,wBAAjB,CAAtC;AACD","sourcesContent":["import React from \"react\";\nimport { configureStore } from \"@reduxjs/toolkit\";\n\nimport inventoryReducer, {\n  load_inventory,\n  verify_domain_twitter,\n  verify_domain,\n} from \"./reducers/inventory\";\n\nimport userReducer, {\n  user_auth,\n  user_login,\n  user_logout,\n  user_refresh_balances,\n  user_refresh_config,\n  user_transfer_icp,\n  user_pwr_transfer,\n  window_focus,\n  window_blur,\n} from \"./reducers/user\";\n\nimport nftReducer, {\n  nft_fetch,\n  nft_media_get,\n  nft_purchase,\n  // nft_purchase_intent,\n  nft_transfer,\n  nft_plug,\n  nft_unsocket,\n  nft_recharge,\n  nft_burn,\n  nft_approve,\n  nft_use,\n  nft_transfer_link,\n  nft_claim_link,\n  nft_enter_code,\n  nft_recharge_quote,\n  nft_set_price,\n} from \"./reducers/nft\";\n\nexport { load_inventory, verify_domain, verify_domain_twitter };\n\nexport {\n  user_auth,\n  user_login,\n  user_logout,\n  user_refresh_balances,\n  user_refresh_config,\n  user_transfer_icp,\n  user_pwr_transfer,\n};\n\nexport {\n  nft_fetch,\n  nft_media_get,\n  nft_purchase,\n  // nft_purchase_intent,\n  nft_transfer,\n  nft_plug,\n  nft_unsocket,\n  nft_recharge,\n  nft_burn,\n  nft_approve,\n  nft_use,\n  nft_transfer_link,\n  nft_claim_link,\n  nft_enter_code,\n  nft_recharge_quote,\n  nft_set_price,\n};\nexport const TestAnvilComponent = () => {\n  return <div>fun component sweet 123 123 123</div>;\n};\n\nimport { InventoryLarge } from \"./components/Inventory.js\";\nexport { InventoryLarge };\nimport {\n  Provider,\n  createStoreHook,\n  createDispatchHook,\n  createSelectorHook,\n} from \"react-redux\";\n\nconst MyContext = React.createContext(null);\n\n// Export your custom hooks if you wish to use them in other files.\nexport const useAnvilStore = createStoreHook(MyContext);\nexport const useAnvilDispatch = createDispatchHook(MyContext);\nexport const useAnvilSelector = createSelectorHook(MyContext);\n\nconst myStore = configureStore({\n  // devTools: { name: \"Anvil\" },\n  reducer: {\n    user: userReducer,\n    nft: nftReducer,\n    inventory: inventoryReducer,\n  },\n  devTools: process.env.NODE_ENV !== \"production\",\n});\n\nexport function AnvilProvider({ children }) {\n  return (\n    <Provider context={MyContext} store={myStore}>\n      {children}\n    </Provider>\n  );\n}\n\n// Extra\n\nsetTimeout(() => {\n  myStore.dispatch(user_auth());\n}, 100);\n\nif (typeof window !== \"undefined\") {\n  window.addEventListener(\"focus\", () => myStore.dispatch(window_focus()));\n  window.addEventListener(\"blur\", () => myStore.dispatch(window_blur()));\n}\n"],"file":"index.js"}