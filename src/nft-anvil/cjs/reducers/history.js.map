{"version":3,"sources":["../../src/reducers/history.js"],"names":["userSlice","name","initialState","lastUpdated","total","from","to","events","reducers","setEvents","state","action","Math","floor","Date","now","payload","setInfo","actions","loadInfo","dispatch","getState","identity","authentication","client","getIdentity","s","history","user","map","space","agentOptions","getAgentOptions","previous","info","p","canister","toText","tailHistory","loadHistory","Principal","fromText","list","mapValuesDeep","v","toString","loadNftHistory","transactions","r","Promise","all","tx_id","slot","idx","TransactionId","decode","resp","data","obj","cb","_","isArray","innerObj","isObject","mapValues","val","cluster_info","router","config_get","log","log_get","reducer"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { AuthClient } from \"@dfinity/auth-client\";\nimport { router } from \"@vvv-interactive/nftanvil-canisters/cjs/router.js\";\nimport { ledger } from \"@vvv-interactive/nftanvil-canisters/cjs/ledger.js\";\nimport { historyCanister } from \"@vvv-interactive/nftanvil-canisters/cjs/history.js\";\n\nimport authentication from \"../auth\";\n\nimport { principalToAccountIdentifier } from \"@vvv-interactive/nftanvil-tools/cjs/token.js\";\n\nimport { Principal } from \"@dfinity/principal\";\n\nimport * as AccountIdentifier from \"@vvv-interactive/nftanvil-tools/cjs/accountidentifier.js\";\nimport * as TransactionId from \"@vvv-interactive/nftanvil-tools/cjs/transactionid.js\";\n\nimport { PrincipalFromSlot } from \"@vvv-interactive/nftanvil-tools/cjs/principal.js\";\n\nimport { toast } from \"react-toastify\";\nimport _ from \"lodash\";\n\nexport const userSlice = createSlice({\n  name: \"history\",\n  initialState: {\n    lastUpdated: 0,\n    total: 0,\n    from: 0,\n    to: 0,\n    events: [],\n  },\n  reducers: {\n    setEvents: (state, action) => {\n      return {\n        ...state,\n        lastUpdated: Math.floor(Date.now() / 1000),\n        events: action.payload,\n      };\n    },\n    setInfo: (state, action) => {\n      return { ...state, ...action.payload };\n    },\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const { setEvents, setInfo } = userSlice.actions;\n\nexport const loadInfo = () => async (dispatch, getState) => {\n  let identity = authentication.client.getIdentity();\n  let s = getState();\n\n  let history = historyCanister(\n    PrincipalFromSlot(s.user.map.space, s.user.map.history),\n    { agentOptions: await authentication.getAgentOptions() }\n  );\n\n  let { total, previous } = await history.info();\n  let p = {\n    total,\n    canister: PrincipalFromSlot(s.user.map.space, s.user.map.history).toText(),\n  };\n  dispatch(setInfo({ total }));\n  return p;\n};\n\nexport const tailHistory =\n  ({ canister }) =>\n  async (dispatch, getState) => {};\n\nexport const loadHistory =\n  ({ canister, from, to }) =>\n  async (dispatch, getState) => {\n    let identity = authentication.client.getIdentity();\n\n    let s = getState();\n    dispatch(loadInfo());\n\n    let history = historyCanister(Principal.fromText(canister), {\n      agentOptions: await authentication.getAgentOptions(),\n    });\n\n    let events = await history.list({\n      from,\n      to,\n    });\n\n    events = mapValuesDeep(events, (v) => {\n      return typeof v === \"bigint\" ? v.toString() : v;\n    });\n\n    dispatch(setEvents(events));\n  };\n\nexport const loadNftHistory =\n  ({ transactions }) =>\n  async (dispatch, getState) => {\n    let identity = authentication.client.getIdentity();\n    let s = getState();\n\n    let r = await Promise.all(\n      transactions.map(async (tx_id) => {\n        let { slot, idx } = TransactionId.decode(tx_id);\n\n        let canister = PrincipalFromSlot(s.user.map.space, slot);\n\n        let history = historyCanister(canister, {\n          agentOptions: await authentication.getAgentOptions(),\n        });\n        let resp = await history.list({\n          from: idx,\n          to: idx + 1,\n        });\n        return {\n          idx,\n          canister: canister.toText(),\n          data: resp[0] ? resp[0][0] : null,\n        };\n      })\n    );\n    return r;\n  };\n\nconst mapValuesDeep = (obj, cb) => {\n  if (_.isArray(obj)) {\n    return obj.map((innerObj) => mapValuesDeep(innerObj, cb));\n  } else if (_.isObject(obj)) {\n    return _.mapValues(obj, (val) => mapValuesDeep(val, cb));\n  } else {\n    return cb(obj);\n  }\n};\n\nexport const cluster_info = () => async (dispatch, getState) => {\n  let identity = authentication.client.getIdentity();\n\n  let s = getState();\n\n  let map = await router.config_get();\n\n  let log = await router.log_get();\n\n  return { map, log };\n};\n\nexport default userSlice.reducer;\n"],"file":"history.js"}