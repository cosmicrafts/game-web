{"version":3,"sources":["../../src/reducers/inventory.js"],"names":["inventorySlice","name","initialState","reducers","pageSet","state","action","draft","payload","aid","pageIdx","list","metaSet","meta","verifiedDomainSet","domain","data","actions","load_inventory","max","dispatch","getState","identity","authentication","client","getIdentity","s","user","map","account","length","can","space","AccountIdentifier","TextToSlot","acc","agentOptions","getAgentOptions","TextToArray","parseInt","filter","x","verify_domain_twitter","inventory","undefined","Promise","resolve","reject","fetch","then","response","json","text","replace","e","console","log","catch","verify_domain","reducer"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { accountCanister } from \"@vvv-interactive/nftanvil-canisters/cjs/account.js\";\nimport authentication from \"../auth\";\nimport { produce } from \"immer\";\nimport * as AccountIdentifier from \"@vvv-interactive/nftanvil-tools/cjs/accountidentifier.js\";\nimport { PrincipalFromSlot } from \"@vvv-interactive/nftanvil-tools/cjs/principal.js\";\nimport { tokenToText } from \"@vvv-interactive/nftanvil-tools/cjs/token.js\";\n\nexport const inventorySlice = createSlice({\n  name: \"inventory\",\n  initialState: {},\n  reducers: {\n    pageSet: (state, action) => {\n      return produce(state, (draft) => {\n        if (!draft[action.payload.aid]) draft[action.payload.aid] = [];\n        draft[action.payload.aid][action.payload.pageIdx] = action.payload.list;\n        return draft;\n      });\n    },\n    metaSet: (state, action) => {\n      return { ...state, [action.payload.aid + \"meta\"]: action.payload.meta };\n    },\n    verifiedDomainSet: (state, action) => {\n      return {\n        ...state,\n        [action.payload.domain + \"_domain\"]: action.payload.data,\n      };\n    },\n  },\n});\n\nconst { pageSet, metaSet, verifiedDomainSet } = inventorySlice.actions;\n\nexport const load_inventory =\n  (aid, pageIdx, max) => async (dispatch, getState) => {\n    let identity = authentication.client\n      ? authentication.client.getIdentity()\n      : null;\n    let s = getState();\n    if (!s.user.map.account?.length) return null;\n\n    let can = PrincipalFromSlot(\n      s.user.map.space,\n      AccountIdentifier.TextToSlot(aid, s.user.map.account)\n    );\n    let acc = accountCanister(can, {\n      agentOptions: authentication.getAgentOptions(),\n    });\n\n    let meta = await acc.meta(AccountIdentifier.TextToArray(aid));\n    if (meta[0]) dispatch(metaSet({ aid, meta: meta[0] }));\n    // console.log(\"ACC META\", meta);\n\n    pageIdx = parseInt(pageIdx, 10);\n    let list = await acc.list(\n      AccountIdentifier.TextToArray(aid),\n      pageIdx * max,\n      (pageIdx + 1) * max\n    );\n    list = list.filter((x) => x !== 0n).map((x) => tokenToText(x));\n    dispatch(pageSet({ aid, pageIdx, list }));\n  };\n\nexport const verify_domain_twitter = (domain) => async (dispatch, getState) => {\n  let s = getState();\n\n  if (s.inventory[domain + \"_domain\"] === undefined) {\n    dispatch(verifiedDomainSet({ domain, data: -1 }));\n\n    let data = await new Promise((resolve, reject) => {\n      fetch(\"https://nftpkg.com/api/v1/verify?url=\" + domain)\n        .then((response) => {\n          return response.json();\n        })\n        .then((data) => {\n          try {\n            resolve(data.text.replace(/[\\s]+/gs, \"\"));\n          } catch (e) {\n            console.log(e);\n            resolve(false);\n          }\n        })\n        .catch((e) => {\n          resolve(false);\n        });\n    });\n\n    dispatch(verifiedDomainSet({ domain, data }));\n  }\n};\n\nexport const verify_domain = (domain) => async (dispatch, getState) => {\n  let s = getState();\n\n  if (s.inventory[domain + \"_domain\"] === undefined) {\n    dispatch(verifiedDomainSet({ domain, data: -1 }));\n\n    let data = await new Promise((resolve, reject) => {\n      fetch(\"https://\" + domain + \"/.well-known/nftanvil.json\")\n        .then((response) => response.json())\n        .then((data) => {\n          try {\n            resolve(data);\n          } catch (e) {\n            console.log(e);\n            resolve(false);\n          }\n        })\n        .catch((e) => {\n          console.log(e);\n          resolve(false);\n        });\n    });\n\n    dispatch(verifiedDomainSet({ domain, data }));\n  }\n};\n\nexport default inventorySlice.reducer;\n"],"file":"inventory.js"}