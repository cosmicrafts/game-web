{"version":3,"sources":["../../src/reducers/user.js"],"names":["initialState","address","subaccount","principal","anonymous","focused","icp","anv","map","acccan","oracle","icpCycles","icpFee","pwrFee","anvFee","pro","userSlice","name","reducers","resetReducer","balancesSet","state","action","payload","focusSet","proSet","authSet","mapSet","actions","user_login","dispatch","user_auth","allowAnonymous","getState","authentication","create","authClient","client","isAuthenticated","Promise","resolve","reject","login","process","env","REACT_APP_IDENTITY_PROVIDER","identityProvider","onSuccess","e","console","log","onError","identity","getIdentity","getPrincipal","toString","i","c","substring","AccountIdentifier","ArrayToText","window","localStorage","getItem","router","setOptions","REACT_APP_ROUTER_CANISTER_ID","agentOptions","getAgentOptions","config_get","REACT_APP_LOCAL_BACKEND","nft_avail","slot","space","toText","join","TextToSlot","account","user_refresh_balances","user_refresh_config","user_refresh_icp_balance","user_refresh_pwr_balance","user_restore_purchase","user_logout","AuthClient","logout","s","user","ledger","account_balance","TextToArray","then","e8s","user_pwr_buy","amount","catch","pwrcan","pwr","balance","includes","user_pwr_transfer","to","memo","filter","Boolean","trez","pwr_transfer","from","Error","JSON","stringify","user_transfer_icp","pwr_withdraw","intent","pwr_purchase_intent","err","paymentAddress","ok","ledger_result","transfer","fee","from_subaccount","created_at_time","Ok","error","Err","claim","pwr_purchase_claim","transactionId","window_focus","window_blur","reducer"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { AuthClient } from \"@dfinity/auth-client\";\nimport { router } from \"@vvv-interactive/nftanvil-canisters/cjs/router.js\";\n// import Cookies from \"js-cookie\";\nimport { ledgerCanister } from \"@vvv-interactive/nftanvil-canisters/cjs/ledger.js\";\nimport { pwrCanister } from \"@vvv-interactive/nftanvil-canisters/cjs/pwr.js\";\n\nimport authentication from \"../auth\";\n\nimport {\n  principalToAccountIdentifier,\n  getSubAccountArray,\n} from \"@vvv-interactive/nftanvil-tools/cjs/token.js\";\n\nimport { BigIntToString } from \"@vvv-interactive/nftanvil-tools/cjs/data.js\";\n\nimport * as AccountIdentifier from \"@vvv-interactive/nftanvil-tools/cjs/accountidentifier.js\";\nimport { PrincipalFromSlot } from \"@vvv-interactive/nftanvil-tools/cjs/principal.js\";\n\nconst initialState = {\n  address: null,\n  subaccount: null,\n  principal: null,\n  anonymous: true,\n  focused: true,\n  icp: \"0\",\n  anv: \"0\",\n  map: {},\n  acccan: \"\",\n  oracle: {\n    icpCycles: \"160000\",\n    icpFee: \"10000\",\n    pwrFee: \"10000\",\n    anvFee: \"10000\",\n  },\n  pro: false,\n};\n\nexport const userSlice = createSlice({\n  name: \"user\",\n  initialState,\n  reducers: {\n    resetReducer: () => initialState,\n    balancesSet: (state, action) => {\n      return {\n        ...state,\n        icp: action.payload.icp,\n        anv: action.payload.anv,\n        oracle: action.payload.oracle,\n      };\n    },\n    focusSet: (state, action) => {\n      return { ...state, focused: action.payload };\n    },\n    proSet: (state, action) => {\n      return {\n        ...state,\n        pro: action.payload,\n      };\n    },\n\n    authSet: (state, action) => {\n      const { address, subaccount, principal, anonymous, map, acccan } =\n        action.payload;\n      return {\n        ...state,\n        address,\n        principal,\n        anonymous,\n        subaccount,\n        ...(map ? { map, acccan } : {}),\n      };\n    },\n    mapSet: (state, action) => {\n      return {\n        ...state,\n        map: action.payload,\n      };\n    },\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const { resetReducer, proSet, authSet, balancesSet, focusSet, mapSet } =\n  userSlice.actions;\n\nexport const user_login = () => (dispatch) => {\n  dispatch(user_auth(false));\n};\n\nexport const user_auth =\n  (allowAnonymous = true) =>\n  async (dispatch, getState) => {\n    await authentication.create();\n    let authClient = authentication.client;\n\n    if (!allowAnonymous && !(await authClient.isAuthenticated())) {\n      await new Promise(async (resolve, reject) => {\n        authClient.login({\n          //maxTimeToLive: 10000000000n,\n          ...(process.env.REACT_APP_IDENTITY_PROVIDER\n            ? { identityProvider: process.env.REACT_APP_IDENTITY_PROVIDER }\n            : {}),\n          onSuccess: async (e) => {\n            console.log(authClient);\n            resolve();\n          },\n          onError: reject,\n        });\n      });\n    }\n\n    const identity = await authClient.getIdentity();\n\n    let principal = identity.getPrincipal().toString();\n    let anonymous = !(await authClient.isAuthenticated());\n    let address, subaccount;\n\n    if (!anonymous) {\n      for (let i = 0; i < 100000; i++) {\n        let c = principalToAccountIdentifier(principal, i);\n\n        if (c.substring(0, 3) === \"a00\") {\n          address = c;\n          subaccount = AccountIdentifier.ArrayToText(getSubAccountArray(i));\n          //console.log(subaccount);\n\n          break;\n        }\n      }\n    }\n\n    let pro = window.localStorage.getItem(\"pro\") == \"true\";\n    if (pro) dispatch(proSet(true));\n\n    router.setOptions(process.env.REACT_APP_ROUTER_CANISTER_ID, {\n      agentOptions: authentication.getAgentOptions(),\n    });\n\n    let map = await router.config_get();\n\n    map.router = map.router.toString();\n    map = BigIntToString(map);\n\n    // console.log(\"ROUTER MAP\", map);\n\n    if (process.env.REACT_APP_LOCAL_BACKEND) {\n      console.log(\n        \"Proxy command:\\n icx-proxy --address 127.0.0.1:8453 --dns-alias \" +\n          map.nft_avail\n            .map(\n              (slot) =>\n                `${slot}.lvh.me:${PrincipalFromSlot(map.space, slot).toText()}`\n            )\n            .join(\" \")\n      );\n    }\n\n    let acccan = address\n      ? PrincipalFromSlot(\n          map.space,\n          AccountIdentifier.TextToSlot(address, map.account)\n        ).toText()\n      : null;\n\n    dispatch(\n      authSet({ address, subaccount, principal, anonymous, map, acccan })\n    );\n    dispatch(user_refresh_balances());\n  };\n\nexport const user_refresh_config = () => async (dispatch, getState) => {\n  let map = await router.config_get();\n  map = BigIntToString(map);\n  // console.log(\"ROUTER MAP\", map);\n  dispatch(mapSet(map));\n};\n\nexport const user_refresh_balances = () => async (dispatch, getState) => {\n  if (!authentication || !authentication.client) return;\n  if (!(await authentication.client.isAuthenticated())) return;\n  await dispatch(user_refresh_icp_balance());\n  if (!(await authentication.client.isAuthenticated())) return;\n  dispatch(user_refresh_pwr_balance());\n  dispatch(user_restore_purchase());\n};\n\nexport const user_logout = () => async (dispatch, getState) => {\n  var authClient = await AuthClient.create();\n\n  authClient.logout();\n\n  const identity = await authClient.getIdentity();\n  router.setOptions(process.env.REACT_APP_ROUTER_CANISTER_ID, {\n    agentOptions: authentication.getAgentOptions(),\n  });\n\n  let principal = identity.getPrincipal().toString();\n  let anonymous = !(await authClient.isAuthenticated());\n\n  //dispatch(authSet({ address: null, principal, anonymous }));\n\n  dispatch(resetReducer());\n  dispatch(user_auth());\n};\n\nexport const user_refresh_icp_balance = () => async (dispatch, getState) => {\n  let identity = authentication.client.getIdentity();\n\n  let s = getState();\n\n  let address = s.user.address;\n  if (!address) return;\n\n  let ledger = ledgerCanister({\n    agentOptions: authentication.getAgentOptions(),\n  });\n\n  await ledger\n    .account_balance({\n      account: AccountIdentifier.TextToArray(address),\n    })\n    .then((icp) => {\n      let e8s = icp.e8s;\n\n      if (e8s >= 30000n) {\n        // automatically wrap ICP\n        dispatch(user_pwr_buy({ amount: e8s - 10000n }));\n      }\n    })\n    .catch((e) => {\n      if (!process.env.REACT_APP_LOCAL_BACKEND) console.log(e); // Will always show bug in dev mode because there is ledger canister on the local replica\n    });\n};\n\nexport const user_refresh_pwr_balance = () => async (dispatch, getState) => {\n  let identity = authentication.client.getIdentity();\n\n  let s = getState();\n\n  let address = s.user.address;\n  if (!address) return;\n\n  let pwrcan = pwrCanister(\n    PrincipalFromSlot(\n      s.user.map.space,\n      AccountIdentifier.TextToSlot(address, s.user.map.pwr)\n    ),\n    { agentOptions: authentication.getAgentOptions() }\n  );\n\n  await pwrcan\n    .balance({\n      user: { address: AccountIdentifier.TextToArray(address) },\n    })\n    .then(async ({ pwr, anv, oracle }) => {\n      // if (Number(pwr) === 0) {\n      //   //TODO: Remove in production\n      //   let fres = await pwrcan.faucet({\n      //     aid: AccountIdentifier.TextToArray(address),\n      //     amount: 800000000n,\n      //   });\n      //   dispatch(refresh_pwr_balance());\n      //   return;\n      // }\n\n      oracle = BigIntToString(oracle);\n      dispatch(\n        balancesSet({ icp: pwr.toString(), anv: anv.toString(), oracle })\n      );\n    })\n    .catch((e) => {\n      // We are most probably logged out. There is currently no better way to handle expired agentjs chain\n      if (e.toString().includes(\"delegation has expired\"))\n        dispatch(user_logout());\n    });\n};\n\nexport const user_pwr_transfer =\n  ({ to, amount, memo = [] }) =>\n  async (dispatch, getState) => {\n    let identity = authentication.client.getIdentity();\n\n    let s = getState();\n\n    let address = s.user.address;\n    let subaccount = [\n      AccountIdentifier.TextToArray(s.user.subaccount) || null,\n    ].filter(Boolean);\n\n    let pwr = pwrCanister(\n      PrincipalFromSlot(\n        s.user.map.space,\n        AccountIdentifier.TextToSlot(address, s.user.map.pwr)\n      ),\n      {\n        agentOptions: authentication.getAgentOptions(),\n      }\n    );\n\n    let trez = await pwr.pwr_transfer({\n      amount,\n      from: { address: AccountIdentifier.TextToArray(address) },\n      to: { address: AccountIdentifier.TextToArray(to) },\n      subaccount: subaccount,\n      memo,\n    });\n\n    if (!(\"ok\" in trez)) throw new Error(JSON.stringify(trez));\n\n    dispatch(user_refresh_balances());\n\n    return trez;\n  };\n\nexport const user_transfer_icp =\n  ({ to, amount }) =>\n  async (dispatch, getState) => {\n    let identity = authentication.client.getIdentity();\n\n    let s = getState();\n\n    let address = s.user.address;\n    let subaccount = [\n      AccountIdentifier.TextToArray(s.user.subaccount) || null,\n    ].filter(Boolean);\n\n    let pwr = pwrCanister(\n      PrincipalFromSlot(\n        s.user.map.space,\n        AccountIdentifier.TextToSlot(address, s.user.map.pwr)\n      ),\n      {\n        agentOptions: authentication.getAgentOptions(),\n      }\n    );\n\n    let trez = await pwr.pwr_withdraw({\n      amount,\n      from: { address: AccountIdentifier.TextToArray(address) },\n      to: { address: AccountIdentifier.TextToArray(to) },\n      subaccount: subaccount,\n    });\n\n    if (!(\"ok\" in trez)) throw new Error(JSON.stringify(trez));\n\n    dispatch(user_refresh_balances());\n\n    return trez;\n  };\n\nexport const user_pwr_buy =\n  ({ amount }) =>\n  async (dispatch, getState) => {\n    let s = getState();\n\n    let identity = authentication.client.getIdentity();\n    let address = s.user.address;\n\n    let pwr = pwrCanister(\n      PrincipalFromSlot(\n        s.user.map.space,\n        AccountIdentifier.TextToSlot(address, s.user.map.pwr)\n      ),\n      {\n        agentOptions: authentication.getAgentOptions(),\n      }\n    );\n\n    let subaccount = [\n      AccountIdentifier.TextToArray(s.user.subaccount) || null,\n    ].filter(Boolean);\n\n    let intent = await pwr.pwr_purchase_intent({\n      user: { address: AccountIdentifier.TextToArray(address) },\n      subaccount,\n    });\n    if (intent.err) throw intent.err;\n\n    let paymentAddress = intent.ok;\n\n    let ledger = ledgerCanister({\n      agentOptions: authentication.getAgentOptions(),\n    });\n\n    let ledger_result = await ledger.transfer({\n      memo: 0,\n      amount: { e8s: amount },\n      fee: { e8s: 10000n },\n      from_subaccount: subaccount,\n      to: paymentAddress,\n      created_at_time: [],\n    });\n\n    if (ledger_result.Ok) {\n    } else {\n      console.error(ledger_result.Err);\n      return;\n    }\n\n    try {\n      let claim = await pwr.pwr_purchase_claim({\n        user: { address: AccountIdentifier.TextToArray(address) },\n        subaccount,\n      });\n\n      if (claim.err) throw claim.err;\n\n      let { transactionId } = claim.ok;\n    } catch (e) {}\n\n    dispatch(user_refresh_balances());\n  };\n\nexport const user_restore_purchase = () => async (dispatch, getState) => {\n  let s = getState();\n\n  let identity = authentication.client.getIdentity();\n\n  let address = s.user.address;\n\n  let pwr = pwrCanister(\n    PrincipalFromSlot(\n      s.user.map.space,\n      AccountIdentifier.TextToSlot(address, s.user.map.pwr)\n    ),\n    {\n      agentOptions: authentication.getAgentOptions(),\n    }\n  );\n\n  let subaccount = [\n    AccountIdentifier.TextToArray(s.user.subaccount) || null,\n  ].filter(Boolean);\n\n  try {\n    let claim = await pwr.pwr_purchase_claim({\n      user: { address: AccountIdentifier.TextToArray(address) },\n      subaccount,\n    });\n\n    if (claim.err) throw claim.err;\n\n    let { transactionId } = claim.ok;\n\n    dispatch(user_refresh_pwr_balance());\n  } catch (e) {}\n};\n\nexport const window_focus = () => async (dispatch, getState) => {\n  dispatch(focusSet(true));\n  dispatch(user_refresh_balances());\n};\n\nexport const window_blur = () => async (dispatch, getState) => {\n  dispatch(focusSet(false));\n};\n\nexport default userSlice.reducer;\n"],"file":"user.js"}