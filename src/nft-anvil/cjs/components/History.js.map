{"version":3,"sources":["../../src/components/History.js"],"names":["SHOW","TAIL_INTERVAL","HistoryRedirect","isLoading","setLoading","dispatch","load","total","canister","from","to","KeyVal","k","v","dark","Key","styled","div","p","Val","HistoryEvent","ev","idx","showThumb","boxColor","space","state","user","map","info","etype","Object","keys","action","details","transactionId","TransactionId","toText","encode","Principal","fromText","timestamp","Number","BigInt","created","inner","format","key","val","length","AccountIdentifier","ArrayToText","JSON","stringify","Array","isArray","address","share","fromUint8Array","_arr","e8s","amount","marketplace","toFixed","hash","token","History","history","events","focused","match","params","parseInt","isTailing","setTailing","evlist","push","HistoryTx","tx","slot","decode","NftHistory","transactions","setEvents","evs","n","data"],"mappings":"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","sourcesContent":["/* global BigInt */\nimport React from \"react\";\nimport {\n  Box,\n  Spinner,\n  Wrap,\n  useColorModeValue,\n  Center,\n  Button,\n  Stack,\n  Flex,\n  ButtonGroup,\n  Spacer,\n  HStack,\n} from \"@chakra-ui/react\";\nimport { useEffect, useState } from \"react\";\nimport { Principal } from \"@dfinity/principal\";\nimport { useTheme } from \"@chakra-ui/react\";\nimport { NFT } from \"./NFT\";\nimport itemgrid from \"../assets/itemgrid.png\";\nimport itemgrid_light from \"../assets/itemgrid_light.png\";\nimport { useWindowSize, useInterval } from \"react-use\";\nimport moment from \"moment\";\nimport { Link } from \"react-router-dom\";\n\nimport {\n  useAnvilSelector as useSelector,\n  useAnvilDispatch as useDispatch,\n} from \"../index.js\";\nimport {\n  loadInfo,\n  loadHistory,\n  tailHistory,\n  loadNftHistory,\n} from \"../reducers/history\";\nimport styled from \"@emotion/styled\";\nimport { push } from \"connected-react-router\";\n\nimport {\n  toHexString,\n  bytesToBase58,\n} from \"@vvv-interactive/nftanvil-tools/cjs/data.js\";\nimport {\n  tokenFromBlob,\n  tokenToText,\n  decodeTokenId,\n} from \"@vvv-interactive/nftanvil-tools/cjs/token.js\";\nimport {\n  PrincipalFromSlot,\n  PrincipalToIdx,\n  PrincipalToSlot,\n} from \"@vvv-interactive/nftanvil-tools/cjs/principal.js\";\n\nimport * as AccountIdentifier from \"@vvv-interactive/nftanvil-tools/cjs/accountidentifier.js\";\nimport * as TransactionId from \"@vvv-interactive/nftanvil-tools/cjs/transactionid.js\";\n\nimport { TX, ACC, NFTA, HASH, PWR, ICP } from \"./Code\";\n\nimport { NFTLarge } from \"./NFT\";\n\nconst SHOW = 10; // max records shown on screen\nconst TAIL_INTERVAL = 1000; // every 1 sec\n\nexport const HistoryRedirect = () => {\n  const [isLoading, setLoading] = useState(true);\n\n  const dispatch = useDispatch();\n\n  const load = async () => {\n    setLoading(false);\n\n    let { total, canister } = await dispatch(loadInfo());\n    let from = total - SHOW;\n    if (from <= 0) from = 0;\n    let to = total;\n    dispatch(push(`/history/${canister}/${from}/${to}`));\n  };\n\n  useEffect(() => {\n    load();\n  }, [dispatch]);\n\n  return (\n    <Box mt={\"15\"}>\n      <Spinner />\n    </Box>\n  );\n};\n\nconst KeyVal = ({ k, v }) => {\n  const dark = useColorModeValue(true, false);\n  return (\n    <Flex>\n      <Key dark={dark}>{k}</Key>\n      <Val>{v}</Val>\n    </Flex>\n  );\n};\n\nconst Key = styled.div`\n  text-transform: capitalize;\n  color: ${(p) => (p.dark ? \"gray.200\" : \"gray.900\")};\n  width: 130px;\n  font-size: 12px;\n  font-family: Greycliff;\n  text-transform: uppercase;\n`;\n\nconst Val = styled.div`\n  width: 100%;\n  word-break: break-all;\n  a {\n    color: rgb(133, 200, 255);\n  }\n\n  font-size: 12px;\n  font-weight: normal;\n`;\n\nconst HistoryEvent = ({ ev, canister, idx, showThumb = true }) => {\n  const boxColor = useColorModeValue(\"white\", \"gray.700\");\n  const space = useSelector((state) => state.user.map.space);\n\n  if (!ev?.info) return null;\n  let etype = Object.keys(ev.info)[0];\n  let action = Object.keys(ev.info[etype])[0];\n  let details = ev.info[etype][action];\n\n  let transactionId = TransactionId.toText(\n    TransactionId.encode(\n      PrincipalToSlot(space, Principal.fromText(canister)),\n      idx\n    )\n  );\n  let timestamp = Number(BigInt(details.created) / 1000000n);\n  //TODO: This is will be done in a better way\n\n  const inner = (\n    <Box bg={boxColor} borderRadius={\"4\"} border={1} p={3} mb={2}>\n      <KeyVal\n        k={\"TX\"}\n        v={\n          <Link to={\"/\" + transactionId}>\n            <TX>{transactionId}</TX>\n          </Link>\n        }\n      />\n      <KeyVal k={\"Timestamp\"} v={moment(timestamp).format(\"LLLL\")} />\n\n      <KeyVal k={\"Type\"} v={<b>{etype + \"-\" + action}</b>} />\n\n      {Object.keys(details).map((key, idx) => {\n        if (key === \"created\") return null;\n\n        let val = details[key];\n        if (val.length === 32) {\n          val = AccountIdentifier.ArrayToText(val);\n          val = (\n            <Link to={\"/\" + val}>\n              <ACC short={true}>{val}</ACC>\n            </Link>\n          );\n        }\n\n        if (key === \"token\" || key === \"socket\" || key === \"plug\") {\n          val = tokenToText(val); //tokenFromBlob(val);\n          val = (\n            <Link to={\"/\" + val}>\n              <NFTA>{val}</NFTA>\n            </Link>\n          );\n        }\n\n        if (key === \"use\") {\n          val = JSON.stringify(val);\n        }\n\n        if (key === \"memo\") {\n          val = toHexString(val);\n        }\n\n        if (key === \"marketplace\" || key === \"affiliate\" || key === \"author\") {\n          if (!val || val.length === 0) return null;\n          if (Array.isArray(val)) val = val[0];\n          if (!val) return null;\n\n          return (\n            <div key={key}>\n              <KeyVal\n                key={idx + \"addr\"}\n                k={key}\n                v={\n                  <HStack>\n                    <ACC short={true}>\n                      {AccountIdentifier.ArrayToText(val.address)}\n                    </ACC>\n                    <div>{val.share / 100 + \"%\"}</div>\n                  </HStack>\n                }\n              />\n            </div>\n          );\n        }\n\n        if (key === \"spender\") {\n          val = Principal.fromUint8Array(val._arr).toText();\n        }\n\n        if (key === \"amount\") {\n          if (val.e8s) val = <ICP>{val.e8s}</ICP>;\n          else val = <ICP>{val}</ICP>;\n        }\n\n        if (key === \"pwr\") {\n          val = <ICP>{val}</ICP>;\n        }\n\n        if (key === \"price\") {\n          val = (\n            <HStack>\n              <div>\n                <ICP>{val.amount}</ICP>\n              </div>\n              {val.marketplace[0] ? (\n                <div>\n                  marketplace share{\" \"}\n                  {(val.marketplace[0].share / 100).toFixed(2)}% -\n                  <ACC short={true}>\n                    {AccountIdentifier.ArrayToText(val.marketplace[0].address)}\n                  </ACC>\n                </div>\n              ) : null}\n            </HStack>\n          );\n        }\n\n        return <KeyVal key={idx} k={key} v={val} />;\n      })}\n      <KeyVal k={\"Hash\"} v={<HASH>{toHexString(ev.hash)}</HASH>} />\n    </Box>\n  );\n\n  if (!showThumb) return inner;\n\n  return (\n    <Stack direction=\"horizontal\" spacing=\"0\">\n      {\"token\" in details ? (\n        <Box w=\"250px\" mb=\"7px\" mr=\"7px\">\n          <NFTLarge id={tokenToText(details.token)} />\n        </Box>\n      ) : null}\n      {inner}\n    </Stack>\n  );\n};\n\nexport const History = (p) => {\n  const total = useSelector((state) => state.history.total);\n  const events = useSelector((state) => state.history.events);\n  const focused = useSelector((state) => state.user.focused);\n\n  const canister = p.match.params.canister;\n  let from = parseInt(p.match.params.from, 10);\n  if (from <= 0) from = 0;\n\n  const to = parseInt(p.match.params.to, 10);\n  const [isLoading, setLoading] = useState(true);\n\n  const [isTailing, setTailing] = useState(true);\n\n  const dispatch = useDispatch();\n\n  const load = async () => {\n    dispatch(loadHistory({ canister, from, to }));\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    load();\n  }, [dispatch, from, to, canister]);\n\n  useInterval(\n    async () => {\n      let { total, canister } = await dispatch(loadInfo());\n      if (to !== total) {\n        dispatch(push(`/history/${canister}/${total - SHOW}/${total}`));\n      }\n    },\n    focused && isTailing ? TAIL_INTERVAL : null\n  );\n\n  if (!events || !events.length) return null;\n\n  let evlist = [];\n  for (let idx = events.length; idx >= 0; idx--) {\n    evlist.push(\n      <HistoryEvent\n        key={idx}\n        idx={idx + from}\n        canister={canister}\n        ev={events[idx] ? events[idx][0] : null}\n        showThumb={false}\n      />\n    );\n  }\n\n  return (\n    <Box mt={8} maxW={\"590px\"} w=\"100%\">\n      {/* <Box p={3}>\n        <div>History canister: {canister} </div>\n        <div>From {from} </div>\n        <div>To {to} </div>\n        <div>Total {total} </div>\n      </Box> */}\n      <Flex>\n        <ButtonGroup mb=\"2\" variant=\"outline\" size=\"sm\" spacing=\"3\">\n          <Link\n            to={`/history/${canister}/${from - SHOW}/${from}`}\n            onClick={() => setTailing(false)}\n          >\n            <Button disabled={from <= 0} variant=\"solid\">\n              Prev\n            </Button>\n          </Link>\n          <Link\n            to={`/history/${canister}/${from + SHOW}/${from + SHOW * 2}`}\n            onClick={() => setTailing(false)}\n          >\n            <Button disabled={total <= to} variant=\"solid\">\n              Next\n            </Button>\n          </Link>\n        </ButtonGroup>\n        <Spacer />\n        <Button\n          size=\"sm\"\n          variant={isTailing ? \"solid\" : \"outline\"}\n          colorScheme={isTailing ? \"teal\" : \"\"}\n          onClick={() => setTailing(!isTailing)}\n        >\n          Tail\n        </Button>\n      </Flex>\n      {evlist}\n    </Box>\n  );\n};\n\nexport const HistoryTx = (p) => {\n  const total = useSelector((state) => state.history.total);\n  const events = useSelector((state) => state.history.events);\n  const space = useSelector((state) => state.user.map.space);\n\n  const tx = p.match.params.tx;\n\n  const { slot, idx: from } = TransactionId.decode(TransactionId.fromText(tx));\n  let canister = PrincipalFromSlot(space, slot).toText();\n  //console.log({ canister, slot, from, space });\n  // const from = parseInt(tx.substr(tx.lastIndexOf(\"-\") + 1), 10);\n\n  const to = from + 1;\n\n  const [isLoading, setLoading] = useState(true);\n\n  const dispatch = useDispatch();\n\n  const load = async () => {\n    dispatch(loadHistory({ canister, from, to }));\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    load();\n  }, [dispatch, from, to, canister]);\n\n  if (!events || !events.length) return null;\n\n  return (\n    <Box mt={8}>\n      <ButtonGroup mb=\"2\" variant=\"outline\" size=\"sm\" spacing=\"3\">\n        <Link to={`/history`}>\n          <Button variant=\"solid\">Back to history</Button>\n        </Link>\n      </ButtonGroup>\n      {events.map((ev, idx) => (\n        <HistoryEvent\n          key={idx}\n          idx={idx + from}\n          canister={canister}\n          ev={ev[0]}\n        />\n      ))}\n    </Box>\n  );\n};\n\nexport const NftHistory = ({ transactions, showThumb }) => {\n  const [events, setEvents] = useState([]);\n\n  const dispatch = useDispatch();\n\n  const load = async () => {\n    let evs = await dispatch(loadNftHistory({ transactions }));\n    setEvents(evs);\n  };\n\n  useEffect(() => {\n    load();\n  }, [dispatch, transactions]);\n\n  if (!events || !events.length) return null;\n\n  return (\n    <Center>\n      <Box mt={8} maxW={\"590px\"} w=\"100%\">\n        {events.map(({ idx, canister, data }, n) => (\n          <HistoryEvent\n            key={n}\n            idx={idx}\n            canister={canister}\n            ev={data}\n            showThumb={showThumb}\n          />\n        ))}\n      </Box>\n    </Center>\n  );\n};\n"],"file":"History.js"}