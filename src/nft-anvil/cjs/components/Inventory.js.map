{"version":3,"sources":["../../src/components/Inventory.js"],"names":["InventoryBox","styled","div","props","bg","width","height","Inventory","address","pageIdx","maxItems","acc","state","user","map","account","isLoading","setLoading","dispatch","load","itemgrid_light","itemgrid","length","items","inventory","meta","cols","Math","min","floor","rows","ceil","id","InventoryLarge","console","log","catch","e","Pagination","end","lg"],"mappings":"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","sourcesContent":["import {\n  Box,\n  Spinner,\n  Wrap,\n  useColorModeValue,\n  Center,\n  Stack,\n  Text,\n  IconButton,\n} from \"@chakra-ui/react\";\nimport { Link } from \"react-router-dom\";\n\nimport {\n  HamburgerIcon,\n  ChevronLeftIcon,\n  ChevronRightIcon,\n} from \"@chakra-ui/icons\";\n\nimport React, { useEffect, useState } from \"react\";\n\nimport { NFTLarge, NFT } from \"./NFT\";\nimport itemgrid from \"../assets/itemgrid.png\";\nimport itemgrid_light from \"../assets/itemgrid_light.png\";\nimport { useWindowSize } from \"react-use\";\n\nimport {\n  useAnvilSelector as useSelector,\n  useAnvilDispatch as useDispatch,\n} from \"../index.js\";\nimport { load_inventory } from \"../reducers/inventory\";\nimport styled from \"@emotion/styled\";\nimport { TX, ACC, NFTA, HASH, PWR, ICP } from \"./Code\";\nimport { NftHistory } from \"./History\";\n\nconst InventoryBox = styled.div`\n  background: url(${(props) => props.bg});\n  background-size: 72px 72px;\n  width: ${(props) => props.width}px;\n  height: ${(props) => props.height}px;\n  margin-top: 28px;\n  padding: 0px;\n  border-radius: 8px;\n`;\n\nexport const Inventory = ({ address }) => {\n  const pageIdx = 0;\n  const maxItems = 100;\n\n  const acc = useSelector((state) => state.user.map.account);\n  const { width, height } = useWindowSize();\n\n  const [isLoading, setLoading] = useState(true);\n\n  const dispatch = useDispatch();\n\n  const load = async () => {\n    await dispatch(load_inventory(address, pageIdx, maxItems));\n    setLoading(false);\n  };\n  let bg = useColorModeValue(itemgrid_light, itemgrid);\n\n  useEffect(() => {\n    if (!acc?.length) return null;\n    load();\n  }, [address, acc, pageIdx]);\n\n  const items = useSelector(\n    (state) => state.inventory[address] && state.inventory[address][pageIdx]\n  );\n  const meta = useSelector((state) => state.inventory[address + \"meta\"]);\n\n  if (!items) return null;\n\n  const cols = Math.min(Math.floor((width - 50) / 72), 10);\n  const rows = Math.ceil(maxItems / cols);\n\n  return (\n    <Stack mt=\"8\">\n      <Pagination\n        address={address}\n        pageIdx={pageIdx}\n        end={items.length < maxItems}\n      />\n\n      <Center>\n        <InventoryBox width={cols * 72} height={rows * 72} bg={bg}>\n          {isLoading ? (\n            <Box h=\"72px\">\n              <Center>\n                <Spinner size=\"lg\" mt=\"11px\" />\n              </Center>\n            </Box>\n          ) : (\n            <Wrap direction={\"horizontal\"} spacing=\"0\">\n              {items && items.map((id) => <NFT id={id} key={id} />)}\n            </Wrap>\n          )}\n        </InventoryBox>\n      </Center>\n\n      <Pagination\n        address={address}\n        pageIdx={pageIdx}\n        end={items.length < maxItems}\n      />\n\n      {/* {meta ? (\n        <NftHistory transactions={meta.transactions} showThumb={true} />\n      ) : null} */}\n    </Stack>\n  );\n};\n\nexport const InventoryLarge = ({ address }) => {\n  const pageIdx = 0;\n\n  const maxItems = 40;\n\n  const acc = useSelector((state) => state.user.map.account);\n  // const { width, height } = useWindowSize();\n\n  const [isLoading, setLoading] = useState(true);\n\n  const dispatch = useDispatch();\n\n  const load = async () => {\n    console.log(\"XXX\");\n    await dispatch(load_inventory(address, pageIdx, maxItems)).catch((e) => {\n      console.log(e);\n    });\n    console.log(\"YYY\");\n    setLoading(false);\n  };\n\n  let bg = useColorModeValue(itemgrid_light, itemgrid);\n\n  useEffect(() => {\n    if (!acc?.length) return null;\n    load();\n  }, [address, acc, pageIdx]);\n\n  const items = useSelector(\n    (state) => state.inventory[address] && state.inventory[address][pageIdx]\n  );\n\n  const meta = useSelector((state) => state.inventory[address + \"meta\"]);\n\n  if (!items) return null;\n\n  console.log({ items, meta, address, pageIdx, maxItems });\n\n  return (\n    <Stack mt=\"8\">\n      <Pagination\n        address={address}\n        pageIdx={pageIdx}\n        end={items.length < maxItems}\n        lg={true}\n      />\n\n      <Center>\n        <Box mt=\"4\" mb=\"4\" w={\"100%\"} bg={bg}>\n          {isLoading ? (\n            <Box h=\"72px\">\n              <Center>\n                <Spinner size=\"lg\" mt=\"11px\" />\n              </Center>\n            </Box>\n          ) : (\n            <Wrap direction={\"horizontal\"} spacing=\"5\" justify=\"center\">\n              {items && items.map((id) => <NFTLarge id={id} key={id} />)}\n            </Wrap>\n          )}\n        </Box>\n      </Center>\n\n      <Pagination\n        address={address}\n        pageIdx={pageIdx}\n        end={items.length < maxItems}\n        lg={true}\n      />\n\n      {/* {meta ? (\n        <NftHistory transactions={meta.transactions} showThumb={true} />\n      ) : null} */}\n    </Stack>\n  );\n};\n\nconst Pagination = ({ address, pageIdx, end, lg = false }) => {\n  return (\n    <Text fontSize=\"11px\" textAlign=\"center\">\n      <ACC short={true}>{address}</ACC>\n\n      <IconButton ml=\"2\" size=\"xs\" icon={<ChevronLeftIcon />} variant=\"solid\" />\n\n      <IconButton\n        ml=\"2\"\n        size=\"xs\"\n        icon={<ChevronRightIcon />}\n        variant=\"outline\"\n      />\n    </Text>\n  );\n};\n"],"file":"Inventory.js"}